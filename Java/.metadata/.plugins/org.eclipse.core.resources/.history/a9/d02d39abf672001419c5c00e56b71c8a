import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JTextArea;

public class ChatClient {

	public static void main(String[] args) {
		Socket client = null;
		BufferedReader serverin = null;
		PrintWriter clientout = null;
		String s = null;
		try {
			client = new Socket("127.0.0.1",1207);
			serverin = new BufferedReader(new InputStreamReader(client.getInputStream()));
			clientout = new  PrintWriter(client.getOutputStream());
			s = "";
		} catch(Exception e) {
			e.printStackTrace();
		}
		 new ChatFrame();
	}
	
	class ChatFrame extends JFrame
	{
		JTextArea out = new JTextArea(1, 30);
		JTextArea in = new JTextArea(20, 30);
		String read = null;
		ChatFrame()
		{
			super("ChatClient");
		    in.setBorder(BorderFactory.createRaisedBevelBorder());
		    out.setLineWrap(true);
		    in.setLineWrap(true);
			Button send = new Button("Send");
			send.addActionListener(new SendMonitor());
		    add(out, BorderLayout.SOUTH);
			add(in, BorderLayout.CENTER);
			add(send, BorderLayout.EAST	);
			pack();
			setVisible(true);
		}
		
		class SendMonitor implements ActionListener
		{
			public void actionPerformed(ActionEvent e)
			{
				try {
					while(!s.equals("q"))
					{
						in.append("Client: ");
						s = out.getText();
						clientout.println(s);
						clientout.flush();
						in.append("Server: " + serverin = out.getText().readLine());
					}
					
					serverin.close();
					clientout.close();
					client.close();
				} catch (IOException e1) {
					e1.printStackTrace();
				}
			}
		}
	}
	
	
}